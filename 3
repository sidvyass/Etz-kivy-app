from database.user_database import UserAuthentication
import asyncio
from base_logger import getlogger


class LoginController:
    """The controller handles interactions between the view and the model."""

    def __init__(self, login_model: UserAuthentication):
        self.model: UserAuthentication = login_model  # type hint for auto complete
        self.LOGGER = getlogger("Login Controller")
        self.data = asyncio.create_task(self.model.fetch_user_data())

    async def authenticate(self, username: str, password: str) -> bool:
        self.LOGGER.info("Authenicating...")

        if not self.data.done():
            self.LOGGER.info("awaiting username, password values from MT...")
        await self.data

        if (username.strip(), password.strip()) in self.data:
            return True

        else:
            for d in self.data:
                print(d)
                print("*" * 50)
        return False
